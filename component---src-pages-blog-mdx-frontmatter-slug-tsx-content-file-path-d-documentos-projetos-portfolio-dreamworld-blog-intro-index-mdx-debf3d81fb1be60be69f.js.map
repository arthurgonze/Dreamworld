{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-tsx-content-file-path-d-documentos-projetos-portfolio-dreamworld-blog-intro-index-mdx-debf3d81fb1be60be69f.js","mappings":"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","sources":["webpack://dreamworld/./blog/intro/index.mdx","webpack://dreamworld/./src/pages/blog/{mdx.frontmatter__slug}.tsx","webpack://dreamworld/./src/components/layout.module.css","webpack://dreamworld/./src/components/layout.tsx","webpack://dreamworld/./src/components/seo.tsx","webpack://dreamworld/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is my first blog post! Isn't it \", React.createElement(_components.em, null, \"great\"), \"?\"), \"\\n\", React.createElement(_components.p, null, \"Some of my \", React.createElement(_components.strong, null, \"favorite\"), \" things are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Games\"), \"\\n\", React.createElement(_components.li, null, \"Deving\"), \"\\n\", React.createElement(_components.li, null, \"Exercising\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/Documentos/Projetos/Portfolio/dreamworld/blog/intro/index.mdx\";\nimport * as React from 'react';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport {GatsbyImage, getImage} from 'gatsby-plugin-image';\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  const image = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), React.createElement(GatsbyImage, {\n    image: image,\n    alt: data.mdx.frontmatter.hero_image_alt\n  }), React.createElement(\"p\", null, \"Photo Credit:\", \" \", React.createElement(\"a\", {\n    href: data.mdx.frontmatter.hero_image_credit_link\n  }, data.mdx.frontmatter.hero_image_credit_text)), children);\n};\nconst query = \"682384415\";\nexport const Head = _ref2 => {\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: data.mdx.frontmatter.title\n  });\n};\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import React from 'react';\r\nimport { Link, useStaticQuery, graphql } from 'gatsby';\r\nimport {container, heading, navLinks, navLinkItem, navLinkText, siteTitle} from './layout.module.css';\r\n\r\n\r\ninterface LayoutProps {\r\n    pageTitle: string,\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ pageTitle, children }: LayoutProps) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <div className={container}>\r\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\r\n      <nav>\r\n        <ul className={navLinks}>\r\n          <li className={navLinkItem}><Link to=\"/\" className={navLinkText}>Home</Link></li>\r\n          <li className={navLinkItem}><Link to=\"/about\" className={navLinkText}>About</Link></li>\r\n          <li className={navLinkItem}><Link to=\"/blog\" className={navLinkText}>Blog</Link></li>\r\n          {/* <li className={navLinkItem}><Link to=\"/threejs_sandbox\" className={navLinkText}>ThreeJS</Link></li> */}\r\n        </ul>\r\n      </nav>\r\n      <main>\r\n        <h1 className={heading}>{pageTitle}</h1>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;","import * as React from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\ninterface SeoProps {\r\n    title: string\r\n}\r\n\r\nconst Seo: React.FC<SeoProps> = ({ title }:SeoProps) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <title> {title} | {data.site.siteMetadata.title} </title>\r\n  )\r\n}\r\n\r\nexport default Seo","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","strong","ul","li","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","children","image","getImage","mdx","frontmatter","hero_image","Layout","pageTitle","title","date","GatsbyImage","alt","hero_image_alt","href","hero_image_credit_link","hero_image_credit_text","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","navLinkItem","navLinkText","useStaticQuery","className","site","siteMetadata","Link","to","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}