{"version":3,"file":"component---src-pages-blog-index-tsx-9576150edcae463d548f.js","mappings":"qKAGWA,EAAc,sCACdC,EAAc,sCCmCzB,MA7BsCC,IAA2C,IAA1C,UAAEC,EAAS,SAAEC,GAAuB,EACzE,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAS5B,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UDpBc,mCCqBjBD,EAAAA,cAAAA,SAAAA,CAAQC,UDhBS,oCCgBcH,EAAKI,KAAKC,aAAaC,OACtDJ,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UDnBU,mCCoBZD,EAAAA,cAAAA,KAAAA,CAAIC,UAAWR,GAAaO,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,IAAIL,UAAWP,GAAa,SACjEM,EAAAA,cAAAA,KAAAA,CAAIC,UAAWR,GAAaO,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,SAASL,UAAWP,GAAa,UACtEM,EAAAA,cAAAA,KAAAA,CAAIC,UAAWR,GAAaO,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,QAAQL,UAAWP,GAAa,WAIzEM,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UD9BS,iCC8BYL,GACxBC,GAEC,C,+CCZV,IAhBgCF,IAAyB,IAAxB,MAAES,GAAgB,EACjD,MAAMN,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEC,EAAAA,cAAAA,QAAAA,KAAO,IAAEI,EAAM,MAAIN,EAAKI,KAAKC,aAAaC,MAAM,IAAS,C,6GCI7D,MAkCaG,EAAe,IAAMP,EAAAA,cAACQ,EAAAA,EAAG,CAACJ,MAAM,kBAE7C,UApCiBT,IAAgC,IAA/B,KAACG,GAAyB,EAC1C,OACEE,EAAAA,cAACS,EAAAA,EAAM,CAACb,UAAU,iBAEdE,EAAKY,OAAOC,MAAMC,KAAKC,GACrBb,EAAAA,cAAAA,UAAAA,CAASc,IAAKD,EAAKE,IACjBf,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAE,SAAWO,EAAKG,YAAYC,MACjCJ,EAAKG,YAAYZ,QAGtBJ,EAAAA,cAAAA,IAAAA,KAAG,WAASa,EAAKG,YAAYE,SAI5B,C","sources":["webpack://dreamworld/./src/components/layout.module.css","webpack://dreamworld/./src/components/layout.tsx","webpack://dreamworld/./src/components/seo.tsx","webpack://dreamworld/./src/pages/blog/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import React from 'react';\r\nimport { Link, useStaticQuery, graphql } from 'gatsby';\r\nimport {container, heading, navLinks, navLinkItem, navLinkText, siteTitle} from './layout.module.css';\r\n\r\n\r\ninterface LayoutProps {\r\n    pageTitle: string,\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ pageTitle, children }: LayoutProps) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <div className={container}>\r\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\r\n      <nav>\r\n        <ul className={navLinks}>\r\n          <li className={navLinkItem}><Link to=\"/\" className={navLinkText}>Home</Link></li>\r\n          <li className={navLinkItem}><Link to=\"/about\" className={navLinkText}>About</Link></li>\r\n          <li className={navLinkItem}><Link to=\"/blog\" className={navLinkText}>Blog</Link></li>\r\n          {/* <li className={navLinkItem}><Link to=\"/threejs_sandbox\" className={navLinkText}>ThreeJS</Link></li> */}\r\n        </ul>\r\n      </nav>\r\n      <main>\r\n        <h1 className={heading}>{pageTitle}</h1>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;","import * as React from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\ninterface SeoProps {\r\n    title: string\r\n}\r\n\r\nconst Seo: React.FC<SeoProps> = ({ title }:SeoProps) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <title> {title} | {data.site.siteMetadata.title} </title>\r\n  )\r\n}\r\n\r\nexport default Seo","import React, { FunctionComponent } from 'react';\r\nimport type { HeadFC, PageProps } from 'gatsby';\r\nimport { graphql, Link } from 'gatsby'\r\nimport Layout from '../../components/layout';\r\nimport Seo from '../../components/seo';\r\n\r\n\r\ntype NodeType = {\r\n    id: KeyType,\r\n    frontmatter:{\r\n      title: string,\r\n      date: Date,\r\n      slug: string\r\n    },\r\n    excerpt: string\r\n}\r\n\r\ntype DataType = {\r\n    allMdx: {\r\n        nodes: NodeType[]\r\n    }\r\n}\r\n\r\nconst BlogPage = ({data}:PageProps<DataType>) => {\r\n  return (\r\n    <Layout pageTitle=\"My Blog Posts\">\r\n      {\r\n        data.allMdx.nodes.map((node) => (\r\n          <article key={node.id}>\r\n            <h2>\r\n              <Link to={`/blog/${node.frontmatter.slug}`}>\r\n                {node.frontmatter.title}\r\n              </Link>\r\n            </h2>\r\n            <p>Posted: {node.frontmatter.date}</p>\r\n          </article>\r\n        ))\r\n      }\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMdx(sort: {frontmatter: {date: DESC}}) {\r\n      nodes {\r\n        frontmatter {\r\n          date\r\n          title\r\n          slug\r\n        }\r\n        id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Head: HeadFC = () => <Seo title=\"My Blog Posts\" />\r\n\r\nexport default BlogPage"],"names":["navLinkItem","navLinkText","_ref","pageTitle","children","data","useStaticQuery","React","className","site","siteMetadata","title","Link","to","Head","Seo","Layout","allMdx","nodes","map","node","key","id","frontmatter","slug","date"],"sourceRoot":""}